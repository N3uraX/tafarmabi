import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { 
  Brain, 
  Code, 
  Zap, 
  Terminal, 
  GitBranch, 
  Database, 
  Cloud, 
  Cpu,
  Target,
  Users,
  Award,
  TrendingUp,
  Code2
} from 'lucide-react';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';

const AboutPage = () => {
  const [typedText, setTypedText] = useState('');
  const [currentSkill, setCurrentSkill] = useState(0);
  const fullText = "Machine Learning Engineer & AI Practitioner";

  // Typing animation effect
  useEffect(() => {
    let index = 0;
    const timer = setInterval(() => {
      if (index <= fullText.length) {
        setTypedText(fullText.slice(0, index));
        index++;
      } else {
        clearInterval(timer);
      }
    }, 100);

    return () => clearInterval(timer);
  }, []);

  // Skills data with levels
  const skills = [
    { name: 'Machine Learning', level: 95, icon: Brain },
    { name: 'Computer Vision', level: 90, icon: Target },
    { name: 'PyTorch/TensorFlow', level: 88, icon: Code },
    { name: 'MLOps & Deployment', level: 85, icon: Cloud },
    { name: 'AI Agents', level: 82, icon: Users },
    { name: 'Data Engineering', level: 80, icon: Database }
  ];

  // Career timeline
  const timeline = [
    {
      year: '2025',
      title: 'Advanced AI Systems & Backend Architecture',
      description: 'Leading development of scalable AI infrastructure and backend systems with modern frameworks',
      tech: ['FastAPI', 'Microservices', 'GraphQL', 'Event-driven Architecture']
    },
    {
      year: '2024',
      title: 'AI Agent Frameworks',
      description: 'Advancing AI agent systems with LangChain and CrewAI',
      tech: ['xAI', 'CrewAI', 'Multi-modal AI']
    },
    {
      year: '2023',
      title: 'MLOps & Infrastructure',
      description: 'Building scalable AI infrastructure and deployment pipelines',
      tech: ['Kubernetes', 'Ray Serve', 'Cloud-native']
    },
    {
      year: '2022',
      title: 'Computer Vision Systems',
      description: 'Developing production-ready CV models and pipelines',
      tech: ['PyTorch', 'OpenCV', 'YOLO']
    },
    {
      year: '2021',
      title: 'ML Engineering Journey',
      description: 'Started specializing in machine learning and AI systems',
      tech: ['TensorFlow', 'Python', 'Data Science']
    }
  ];

  // Tech stack with categories and icons
  const techStack = {
    'ML/AI Frameworks': [
      {
        name: 'PyTorch',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <linearGradient id="hqBdiw7hWbh_bf9we5wHOa_jH4BpkMnRrU5_gr1" x1="18.6" x2="29.117" y1="10.403" y2="42.736" gradientUnits="userSpaceOnUse">
              <stop offset="0" stopColor="#f44f5a"></stop>
              <stop offset=".443" stopColor="#ee3d4a"></stop>
              <stop offset="1" stopColor="#e52030"></stop>
            </linearGradient>
            <path fill="url(#hqBdiw7hWbh_bf9we5wHOa_jH4BpkMnRrU5_gr1)" d="M36.277,15.251C39.276,18.384,41,22.571,41,27c0,9.374-7.626,17-17,17S7,36.374,7,27	c0-8.518,8.812-15.984,15.894-21.983c0.379-0.321,0.74-0.629,1.106-0.941v5.25C17.865,14.559,11,20.837,11,27	c0,7.168,5.832,13,13,13s13-5.832,13-13c0-3.428-1.363-6.657-3.709-9.062L36.277,15.251z M30,10c-1.105,0-2,0.895-2,2s0.895,2,2,2	s2-0.895,2-2S31.105,10,30,10z"></path>
          </svg>
        )
      },
      {
        name: 'TensorFlow',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <polygon fill="#ffa000" points="16,39.609 23,43.609 23,4 16,8"></polygon>
            <polygon fill="#ffa000" points="23,12.433 6,22.25 6,13.75 23,3.933"></polygon>
            <polygon fill="#ffb300" points="32,39.609 25,43.609 25,4 32,8"></polygon>
            <polygon fill="#ffb300" points="25,12.433 42,22.25 42,13.75 25,3.933"></polygon>
            <polygon fill="#ffb300" points="29,19.732 29,27.365 36,31.407 36,23.775"></polygon>
          </svg>
        )
      },
      {
        name: 'OpenCV',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <path fill="#448aff" d="M35,43c-5.514,0-10-4.486-10-10c0-3.562,1.916-6.88,5-8.66l3,5.196c-1.233,0.712-2,2.039-2,3.464 c0,2.168,1.832,4,4,4s4-1.832,4-4c0-1.425-0.767-2.752-2-3.464l3-5.196c3.084,1.78,5,5.099,5,8.66C45,38.514,40.514,43,35,43z"></path>
            <path fill="#ff1744" d="M29,22.629l-3-5.196c1.233-0.712,2-2.04,2-3.464c0-2.168-1.832-4-4-4s-4,1.832-4,4 c0,1.425,0.767,2.752,2,3.464l-3,5.196c-3.084-1.781-5-5.1-5-8.661c0-5.514,4.486-10,10-10s10,4.486,10,10 C34,17.53,32.084,20.849,29,22.629z"></path>
            <path fill="#9ccc65" d="M13.001,43.028c-3.459,0-6.827-1.793-8.678-4.997c-2.757-4.776-1.115-10.903,3.66-13.661 c3.085-1.781,6.917-1.781,10,0l-3,5.196c-1.234-0.713-2.766-0.713-4,0c-1.878,1.084-2.548,3.586-1.465,5.464 c1.084,1.877,3.586,2.549,5.465,1.464c1.233-0.712,2-2.04,2-3.464h6c0,3.561-1.916,6.879-5,8.66 C16.413,42.598,14.695,43.028,13.001,43.028z"></path>
          </svg>
        )
      },
      {
        name: 'Hugging Face',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <path fill="#fff" d="M45.898,36.731c0.354,1.015,0.269,2.096-0.203,3.037c-0.34,0.686-0.826,1.217-1.42,1.692	c-0.717,0.564-1.609,1.043-2.684,1.504c-1.283,0.545-2.849,1.058-3.567,1.246c-1.835,0.475-3.599,0.776-5.388,0.79	c-2.557,0.023-4.76-0.578-6.326-2.115c-0.811,0.099-1.632,0.155-2.458,0.155c-0.783,0-1.557-0.047-2.326-0.141	c-1.571,1.528-3.765,2.125-6.312,2.101c-1.788-0.014-3.552-0.315-5.392-0.79c-0.712-0.188-2.279-0.7-3.562-1.246	c-1.076-0.461-1.967-0.94-2.68-1.504c-0.599-0.475-1.085-1.006-1.425-1.692c-0.467-0.94-0.557-2.021-0.198-3.037	c-0.33-0.776-0.415-1.664-0.156-2.646c0.118-0.446,0.311-0.86,0.557-1.227c-0.052-0.193-0.094-0.39-0.123-0.606	c-0.179-1.288,0.269-2.463,1.113-3.375c0.415-0.456,0.863-0.771,1.33-0.973c-0.344-1.457-0.524-2.957-0.524-4.489	c0-10.839,8.817-19.625,19.696-19.625c3.736,0,7.232,1.034,10.214,2.839c0.538,0.329,1.066,0.682,1.571,1.058	c0.25,0.188,0.5,0.381,0.741,0.583c0.245,0.197,0.486,0.404,0.717,0.616c0.698,0.635,1.354,1.316,1.953,2.045	c0.203,0.24,0.396,0.489,0.585,0.743c0.382,0.503,0.736,1.025,1.061,1.565c0.495,0.809,0.929,1.655,1.307,2.534	c0.25,0.588,0.467,1.189,0.66,1.805c0.288,0.921,0.51,1.871,0.661,2.849c0.047,0.324,0.09,0.653,0.123,0.982	c0.066,0.658,0.104,1.326,0.104,2.007c0,1.514-0.179,2.999-0.514,4.433c0.519,0.202,1.01,0.531,1.467,1.029	c0.844,0.912,1.293,2.092,1.113,3.38c-0.028,0.212-0.071,0.409-0.123,0.602c0.245,0.367,0.439,0.78,0.557,1.227	C46.309,35.067,46.224,35.955,45.898,36.731z"></path>
            <linearGradient id="G0Jpwzc9gkuJdD7CvJwJVa_sop9ROXku5bb_gr1" x1="5.66" x2="42.193" y1="23.549" y2="23.549" gradientUnits="userSpaceOnUse">
              <stop offset="0" stopColor="#ff8100"></stop>
              <stop offset="1" stopColor="#ff8100"></stop>
            </linearGradient>
            <path fill="url(#G0Jpwzc9gkuJdD7CvJwJVa_sop9ROXku5bb_gr1)" d="M40.307,23.548c0-8.992-7.334-16.281-16.381-16.281S7.546,14.557,7.546,23.548	s7.334,16.281,16.381,16.281S40.307,32.54,40.307,23.548z M5.66,23.548c0-10.027,8.178-18.155,18.266-18.155	s18.266,8.128,18.266,18.155s-8.178,18.155-18.266,18.155S5.66,33.575,5.66,23.548z"></path>
            <linearGradient id="G0Jpwzc9gkuJdD7CvJwJVb_sop9ROXku5bb_gr2" x1="13.866" x2="35.058" y1="8.398" y2="40.313" gradientUnits="userSpaceOnUse">
              <stop offset="0" stopColor="#ffd21e"></stop>
              <stop offset=".364" stopColor="#feca17"></stop>
              <stop offset=".941" stopColor="#fbb302"></stop>
              <stop offset="1" stopColor="#fbb000"></stop>
            </linearGradient>
            <path fill="url(#G0Jpwzc9gkuJdD7CvJwJVb_sop9ROXku5bb_gr2)" d="M23.926,39.921	c9.104,0,16.484-7.33,16.484-16.373S33.03,7.176,23.926,7.176S7.442,14.506,7.442,23.548S14.823,39.921,23.926,39.921z"></path>
          </svg>
        )
      }
    ],
    'AI Agents & LLMs': [
      {
        name: 'OpenAI',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 50 50">
            <path d="M45.403,25.562c-0.506-1.89-1.518-3.553-2.906-4.862c1.134-2.665,0.963-5.724-0.487-8.237	c-1.391-2.408-3.636-4.131-6.322-4.851c-1.891-0.506-3.839-0.462-5.669,0.088C28.276,5.382,25.562,4,22.647,4	c-4.906,0-9.021,3.416-10.116,7.991c-0.01,0.001-0.019-0.003-0.029-0.002c-2.902,0.36-5.404,2.019-6.865,4.549	c-1.391,2.408-1.76,5.214-1.04,7.9c0.507,1.891,1.519,3.556,2.909,4.865c-1.134,2.666-0.97,5.714,0.484,8.234	c1.391,2.408,3.636,4.131,6.322,4.851c0.896,0.24,1.807,0.359,2.711,0.359c1.003,0,1.995-0.161,2.957-0.45	C21.722,44.619,24.425,46,27.353,46c4.911,0,9.028-3.422,10.12-8.003c2.88-0.35,5.431-2.006,6.891-4.535	C45.754,31.054,46.123,28.248,45.403,25.562z M35.17,9.543c2.171,0.581,3.984,1.974,5.107,3.919c1.049,1.817,1.243,4,0.569,5.967	c-0.099-0.062-0.193-0.131-0.294-0.19l-9.169-5.294c-0.312-0.179-0.698-0.177-1.01,0.006l-10.198,6.041l-0.052-4.607l8.663-5.001	C30.733,9.26,33,8.963,35.17,9.543z M29.737,22.195l0.062,5.504l-4.736,2.805l-4.799-2.699l-0.062-5.504l4.736-2.805L29.737,22.195z M14.235,14.412C14.235,9.773,18.009,6,22.647,6c2.109,0,4.092,0.916,5.458,2.488C28,8.544,27.891,8.591,27.787,8.651l-9.17,5.294	c-0.312,0.181-0.504,0.517-0.5,0.877l0.133,11.851l-4.015-2.258V14.412z M6.528,23.921c-0.581-2.17-0.282-4.438,0.841-6.383	c1.06-1.836,2.823-3.074,4.884-3.474c-0.004,0.116-0.018,0.23-0.018,0.348V25c0,0.361,0.195,0.694,0.51,0.872l10.329,5.81	L19.11,34.03l-8.662-5.002C8.502,27.905,7.11,26.092,6.528,23.921z M14.83,40.457c-2.171-0.581-3.984-1.974-5.107-3.919	c-1.053-1.824-1.249-4.001-0.573-5.97c0.101,0.063,0.196,0.133,0.299,0.193l9.169,5.294c0.154,0.089,0.327,0.134,0.5,0.134	c0.177,0,0.353-0.047,0.51-0.14l10.198-6.041l0.052,4.607l-8.663,5.001C19.269,40.741,17.001,41.04,14.83,40.457z M35.765,35.588	c0,4.639-3.773,8.412-8.412,8.412c-2.119,0-4.094-0.919-5.459-2.494c0.105-0.056,0.216-0.098,0.32-0.158l9.17-5.294	c0.312-0.181,0.504-0.517,0.5-0.877L31.75,23.327l4.015,2.258V35.588z M42.631,32.462c-1.056,1.83-2.84,3.086-4.884,3.483	c0.004-0.12,0.018-0.237,0.018-0.357V25c0-0.361-0.195-0.694-0.51-0.872l-10.329-5.81l3.964-2.348l8.662,5.002	c1.946,1.123,3.338,2.937,3.92,5.107C44.053,28.249,43.754,30.517,42.631,32.462z"></path>
          </svg>
        )
      },
      {
        name: 'Anthropic',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 50 50">
            <path d="M 5 5 L 5 45 L 45 45 L 45 5 L 5 5 z M 7 7 L 43 7 L 43 43 L 7 43 L 7 7 z M 20.03125 16.96875 L 14.03125 32.96875 L 17.5625 32.96875 L 18.648438 29.935547 L 25.253906 29.935547 L 26.306641 33.03125 L 29.818359 33.03125 L 23.722656 16.96875 L 20.03125 16.96875 z M 26.777344 16.978516 L 32.642578 33.015625 L 35.96875 33.015625 L 30.033203 16.978516 C 30.033203 16.978516 26.801344 16.954516 26.777344 16.978516 z M 21.966797 20.96875 L 24.041016 26.648438 L 19.765625 26.648438 L 21.966797 20.96875 z"></path>
          </svg>
        )
      },
      {
        name: 'xAI',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <polygon fill="#212121" fillRule="evenodd" points="24.032,28.919 40.145,5.989 33.145,5.989 20.518,23.958" clipRule="evenodd"></polygon>
            <polygon fill="#212121" fillRule="evenodd" points="14.591,32.393 7.145,42.989 14.145,42.989 18.105,37.354" clipRule="evenodd"></polygon>
            <polygon fill="#212121" fillRule="evenodd" points="14.547,18.989 7.547,18.989 24.547,42.989 31.547,42.989" clipRule="evenodd"></polygon>
            <polygon fill="#212121" fillRule="evenodd" points="35,16.789 35,43 41,43 41,8.251" clipRule="evenodd"></polygon>
          </svg>
        )
      },
      {
        name: 'CrewAI',
        icon: <Users className="w-12 h-12" />
      }
    ],
    'MLOps & Deployment': [
      {
        name: 'Kubernetes',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 50 50">
            <path d="M 25 2.2773438 C 24.477218 2.2775288 23.954975 2.3938208 23.472656 2.6269531 L 8.0117188 10.091797 C 7.0499738 10.555895 6.3506462 11.43495 6.1132812 12.476562 L 2.2929688 29.259766 C 2.0568878 30.29908 2.3056798 31.391792 2.96875 32.226562 L 13.671875 45.683594 C 14.338066 46.521569 15.352133 47.009766 16.421875 47.009766 L 33.578125 47.009766 C 34.647867 47.009766 35.661934 46.521569 36.328125 45.683594 L 47.03125 32.228516 L 47.03125 32.226562 C 47.694185 31.39248 47.944721 30.300911 47.708984 29.261719 A 1.0001 1.0001 0 0 0 47.708984 29.259766 L 43.886719 12.476562 A 1.0001 1.0001 0 0 0 43.886719 12.474609 C 43.649412 11.434647 42.950464 10.556829 41.988281 10.091797 L 26.529297 2.6269531 A 1.0001 1.0001 0 0 0 26.527344 2.625 C 26.044986 2.3928828 25.522782 2.2771587 25 2.2773438 z M 25 4.2773438 C 25.224653 4.2774147 25.44878 4.3272999 25.658203 4.4277344 L 41.119141 11.892578 C 41.534958 12.093546 41.834807 12.469885 41.9375 12.919922 L 45.757812 29.703125 C 45.859943 30.153346 45.753012 30.622684 45.466797 30.982422 L 34.763672 44.439453 C 34.475863 44.801477 34.040383 45.009766 33.578125 45.009766 L 16.421875 45.009766 C 15.959617 45.009766 15.526091 44.801477 15.238281 44.439453 L 4.5351562 30.982422 C 4.2482266 30.621193 4.1402683 30.151811 4.2421875 29.703125 L 8.0644531 12.921875 C 8.1670882 12.471488 8.4666043 12.094433 8.8808594 11.894531 A 1.0001 1.0001 0 0 0 8.8808594 11.892578 L 24.341797 4.4277344 C 24.550169 4.3270161 24.775347 4.2772728 25 4.2773438 z M 24.992188 8.484375 C 24.851094 8.4846875 24.707812 8.5128125 24.570312 8.5703125 C 24.020312 8.8103125 23.76 9.45 24 10 C 24.23 10.54 24.309141 11.079141 24.369141 11.619141 C 24.389141 11.899141 24.400625 12.169453 24.390625 12.439453 C 24.420625 12.709453 24.280078 12.98 24.080078 13.25 C 23.870078 13.52 23.850312 13.790547 23.820312 14.060547 C 21.076091 14.329904 18.605618 15.53251 16.716797 17.339844 L 16.699219 17.330078 C 16.469219 17.180078 16.250391 17.029531 15.900391 17.019531 C 15.570391 16.999531 15.270078 16.940234 15.080078 16.740234 C 14.870078 16.580234 14.660703 16.400938 14.470703 16.210938 C 14.080703 15.830937 13.709453 15.420391 13.439453 14.900391 C 13.309453 14.650391 13.069297 14.449375 12.779297 14.359375 C 12.199297 14.199375 11.599688 14.529375 11.429688 15.109375 C 11.259688 15.679375 11.599687 16.289219 12.179688 16.449219 C 12.739688 16.619219 13.209922 16.899219 13.669922 17.199219 C 13.889922 17.349219 14.100547 17.509453 14.310547 17.689453 C 14.540547 17.839453 14.66 18.119453 14.75 18.439453 C 14.815992 18.759984 14.999921 18.945416 15.179688 19.125 C 13.81088 21.074269 13 23.443157 13 26 C 13 26.422964 13.023472 26.840139 13.066406 27.251953 C 12.842073 27.330478 12.62004 27.415663 12.429688 27.640625 C 12.209687 27.890625 11.969219 28.089375 11.699219 28.109375 C 11.439219 28.179375 11.170391 28.229766 10.900391 28.259766 C 10.360391 28.329766 9.8102344 28.37 9.2402344 28.25 C 8.9602344 28.2 8.6503906 28.259453 8.4003906 28.439453 C 7.9103906 28.779453 7.800625 29.459219 8.140625 29.949219 C 8.490625 30.439219 9.1701562 30.560937 9.6601562 30.210938 C 10.140156 29.870938 10.649922 29.679766 11.169922 29.509766 C 11.429922 29.429766 11.690938 29.360547 11.960938 29.310547 C 12.220937 29.220547 12.510313 29.299688 12.820312 29.429688 C 13.077895 29.562633 13.305954 29.552045 13.53125 29.529297 C 14.411477 32.383087 16.336155 34.773926 18.849609 36.283203 C 18.763733 36.523485 18.683169 36.773884 18.759766 37.089844 C 18.819766 37.419844 18.829453 37.730938 18.689453 37.960938 C 18.579453 38.210938 18.460078 38.449453 18.330078 38.689453 C 18.050078 39.149453 17.750547 39.609766 17.310547 40.009766 C 17.100547 40.199766 16.959219 40.469297 16.949219 40.779297 C 16.929219 41.379297 17.4 41.880391 18 41.900391 C 18.6 41.920391 19.110859 41.449609 19.130859 40.849609 C 19.140859 40.259609 19.300469 39.740703 19.480469 39.220703 C 19.570469 38.970703 19.680781 38.720469 19.800781 38.480469 C 19.890781 38.220469 20.129922 38.029141 20.419922 37.869141 C 20.708796 37.720044 20.838739 37.509224 20.96875 37.287109 C 22.230991 37.739556 23.5843 38 25 38 C 26.439867 38 27.815298 37.730979 29.095703 37.263672 C 29.231135 37.494815 29.370326 37.714564 29.660156 37.869141 C 29.950156 38.039141 30.189297 38.220469 30.279297 38.480469 C 30.399297 38.730469 30.499844 38.980469 30.589844 39.230469 C 30.769844 39.750469 30.919453 40.269375 30.939453 40.859375 C 30.939453 41.149375 31.059062 41.430625 31.289062 41.640625 C 31.739062 42.040625 32.420078 42.010312 32.830078 41.570312 C 33.230078 41.120312 33.199766 40.439297 32.759766 40.029297 C 32.319766 39.639297 32.02 39.169219 31.75 38.699219 C 31.62 38.469219 31.500625 38.220469 31.390625 37.980469 C 31.250625 37.740469 31.260078 37.439375 31.330078 37.109375 C 31.410078 36.769375 31.320234 36.519766 31.240234 36.259766 L 31.232422 36.234375 C 33.725863 34.710051 35.625253 32.311926 36.486328 29.458984 L 36.519531 29.460938 C 36.799531 29.480937 37.069141 29.509844 37.369141 29.339844 C 37.669141 29.199844 37.970469 29.119219 38.230469 29.199219 C 38.490469 29.239219 38.759531 29.299141 39.019531 29.369141 C 39.539531 29.519141 40.060781 29.699297 40.550781 30.029297 C 40.790781 30.179297 41.090625 30.249687 41.390625 30.179688 C 41.980625 30.049688 42.350703 29.470625 42.220703 28.890625 C 42.090703 28.300625 41.509922 27.930547 40.919922 28.060547 C 40.339922 28.190547 39.8 28.169141 39.25 28.119141 C 38.98 28.089141 38.719219 28.050234 38.449219 27.990234 C 38.179219 27.970234 37.940938 27.790781 37.710938 27.550781 C 37.480938 27.280781 37.220937 27.210859 36.960938 27.130859 L 36.943359 27.125 C 36.978072 26.754075 37 26.379828 37 26 C 37 23.520714 36.243083 21.213679 34.949219 19.298828 C 35.13888 19.099219 35.330515 18.909707 35.400391 18.570312 C 35.490391 18.250312 35.609844 17.970312 35.839844 17.820312 C 36.039844 17.640313 36.260469 17.480312 36.480469 17.320312 C 36.930469 17.020312 37.400937 16.730312 37.960938 16.570312 C 38.240938 16.490313 38.479141 16.299531 38.619141 16.019531 C 38.899141 15.489531 38.690391 14.830547 38.150391 14.560547 C 37.620391 14.280547 36.959453 14.489297 36.689453 15.029297 C 36.419453 15.549297 36.049922 15.959844 35.669922 16.339844 C 35.469922 16.529844 35.270547 16.710859 35.060547 16.880859 C 34.870547 17.080859 34.570234 17.140156 34.240234 17.160156 C 33.890234 17.170156 33.669453 17.330469 33.439453 17.480469 C 31.532566 15.591338 28.997515 14.337129 26.179688 14.060547 C 26.149687 13.790547 26.129922 13.52 25.919922 13.25 C 25.719922 12.98 25.579375 12.709453 25.609375 12.439453 C 25.599375 12.169453 25.610859 11.899141 25.630859 11.619141 C 25.690859 11.079141 25.77 10.54 26 10 C 26.11 9.74 26.12 9.430625 26 9.140625 C 25.82 8.728125 25.415469 8.4834375 24.992188 8.484375 z M 23.558594 16.115234 L 23.509766 16.5 C 23.369766 17.58 23.269922 18.67 23.169922 19.75 C 23.109922 20.32 23.059531 20.900703 23.019531 21.470703 C 22.529531 21.120703 22.039531 20.749922 21.519531 20.419922 C 20.619531 19.809922 19.719062 19.199141 18.789062 18.619141 L 18.474609 18.423828 C 19.881084 17.211935 21.629049 16.393039 23.558594 16.115234 z M 26.441406 16.115234 C 28.449951 16.404413 30.258788 17.284 31.693359 18.578125 L 31.359375 18.789062 C 30.439375 19.379062 29.550391 19.989609 28.650391 20.599609 C 28.290391 20.839609 27.939609 21.089844 27.599609 21.339844 C 27.329609 21.529844 26.959453 21.359297 26.939453 21.029297 C 26.909453 20.599297 26.870078 20.18 26.830078 19.75 C 26.730078 18.67 26.630234 17.58 26.490234 16.5 L 26.441406 16.115234 z M 16.582031 20.607422 L 16.900391 20.939453 C 17.660391 21.729453 18.430937 22.489766 19.210938 23.259766 C 19.540937 23.589766 19.870937 23.900937 20.210938 24.210938 C 20.450937 24.430937 20.360781 24.820156 20.050781 24.910156 C 19.560781 25.060156 19.070078 25.199375 18.580078 25.359375 C 17.550078 25.699375 16.510469 26.020625 15.480469 26.390625 L 15.027344 26.548828 C 15.017439 26.365855 15 26.185504 15 26 C 15 24.009707 15.585092 22.163224 16.582031 20.607422 z M 33.537109 20.804688 C 34.458955 22.319179 35 24.0924 35 26 C 35 26.167032 34.98265 26.32915 34.974609 26.494141 L 34.619141 26.380859 C 33.579141 26.040859 32.540234 25.749219 31.490234 25.449219 C 30.810234 25.249219 30.129219 25.070391 29.449219 24.900391 C 29.959219 24.410391 30.490469 23.929687 30.980469 23.429688 C 31.750469 22.659688 32.519531 21.889844 33.269531 21.089844 L 33.537109 20.804688 z M 24.380859 24 L 25.599609 24 C 25.789609 24 25.970313 24.090469 26.070312 24.230469 L 26.849609 25.210938 C 26.959609 25.340937 27.000703 25.529219 26.970703 25.699219 L 26.689453 26.910156 C 26.659453 27.100156 26.529141 27.249844 26.369141 27.339844 L 25.25 27.859375 C 25.09 27.949375 24.890469 27.949375 24.730469 27.859375 L 23.609375 27.339844 C 23.449375 27.249844 23.309062 27.100156 23.289062 26.910156 L 23.009766 25.699219 C 22.979766 25.529219 23.020859 25.340938 23.130859 25.210938 L 23.910156 24.230469 C 24.010156 24.090469 24.190859 24 24.380859 24 z M 20.769531 28.769531 C 21.079531 28.719531 21.330938 29.030312 21.210938 29.320312 C 21.020937 29.820312 20.839922 30.310547 20.669922 30.810547 C 20.299922 31.840547 19.939609 32.860391 19.599609 33.900391 L 19.462891 34.330078 C 17.683095 33.146647 16.31612 31.405254 15.587891 29.355469 L 16.119141 29.310547 C 17.209141 29.210547 18.279141 29.079219 19.369141 28.949219 C 19.839141 28.899219 20.299531 28.829531 20.769531 28.769531 z M 29.410156 28.910156 C 29.880156 28.960156 30.340547 29.010781 30.810547 29.050781 C 31.900547 29.150781 32.980312 29.250312 34.070312 29.320312 L 34.417969 29.339844 C 33.702862 31.363494 32.36593 33.088437 30.623047 34.273438 L 30.509766 33.910156 C 30.179766 32.870156 29.820703 31.840312 29.470703 30.820312 C 29.310703 30.360312 29.150469 29.910938 28.980469 29.460938 C 28.870469 29.170938 29.110156 28.870156 29.410156 28.910156 z M 25.074219 30.882812 C 25.216719 30.882812 25.359453 30.954609 25.439453 31.099609 C 25.659453 31.519609 25.890859 31.929844 26.130859 32.339844 C 26.670859 33.279844 27.209063 34.230391 27.789062 35.150391 L 28.025391 35.533203 C 27.071252 35.83443 26.055471 36 25 36 C 23.976312 36 22.989581 35.844572 22.060547 35.560547 L 22.310547 35.160156 C 22.890547 34.240156 23.440234 33.299375 23.990234 32.359375 C 24.240234 31.949375 24.480937 31.529609 24.710938 31.099609 C 24.790937 30.954609 24.931719 30.882812 25.074219 30.882812 z"></path>
          </svg>
        )
      },
      {
        name: 'Docker',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 50 50">
            <path d="M 20 9 L 20 14 L 10 14 L 10 19 L 5 19 L 5 24 L 1.125 24 C 0.640625 24 0.242188 24.335938 0.15625 24.8125 C 0.148438 24.847656 0 25.683594 0 26.75 C 0 27.449219 0.0664063 28.210938 0.1875 28.96875 C 1.332031 28.695313 3.429688 28.285156 3.0625 26.9375 C 5.035156 29.222656 9.769531 28.53125 10.96875 27.40625 C 12.308594 29.347656 20.113281 28.605469 20.65625 27.09375 C 22.335938 29.0625 27.542969 29.0625 29.21875 27.09375 C 29.761719 28.605469 37.535156 29.347656 38.875 27.40625 C 39.300781 27.804688 40.1875 28.136719 41.21875 28.3125 C 41.566406 27.652344 41.886719 26.988281 42.1875 26.28125 C 48.539063 26.203125 49.910156 21.636719 49.96875 21.4375 C 50.078125 21.054688 49.929688 20.660156 49.625 20.40625 C 49.519531 20.316406 47.175781 18.414063 43.375 19.0625 C 42.308594 15.589844 39.5625 14.007813 39.4375 13.9375 C 39.078125 13.734375 38.632813 13.765625 38.3125 14.03125 C 38.210938 14.113281 35.847656 16.117188 36.21875 20.21875 C 36.3125 21.25 36.582031 22.160156 37 22.96875 C 36.179688 23.425781 34.769531 24 32.5 24 L 32 24 L 32 19 L 27 19 L 27 9 Z M 41.21875 28.3125 C 41.097656 28.546875 40.941406 28.773438 40.8125 29 L 49.84375 29 C 48.757813 28.726563 46.425781 28.359375 46.8125 26.9375 C 45.535156 28.414063 43.109375 28.632813 41.21875 28.3125 Z M 40.8125 29 L 0.1875 29 C 0.429688 30.46875 0.929688 32.007813 1.6875 33.5 C 7.117188 34.777344 12.816406 32.832031 12.875 32.8125 C 13.398438 32.628906 13.945313 32.917969 14.125 33.4375 C 14.308594 33.957031 14.050781 34.539063 13.53125 34.71875 C 13.339844 34.785156 9.90625 35.9375 5.6875 35.9375 C 4.851563 35.9375 3.972656 35.890625 3.09375 35.78125 C 5.71875 39.261719 10.167969 42 17 42 C 27.804688 42 36.113281 37.410156 40.8125 29 Z M 0.1875 29 C 0.183594 28.984375 0.191406 28.984375 0.1875 28.96875 C 0.121094 28.984375 0.0585938 28.984375 0 29 Z M 22 11 L 25 11 L 25 14 L 22 14 Z M 12 16 L 15 16 L 15 19 L 12 19 Z M 17 16 L 20 16 L 20 19 L 17 19 Z M 22 16 L 25 16 L 25 19 L 22 19 Z M 7 21 L 10 21 L 10 24 L 7 24 Z M 12 21 L 15 21 L 15 24 L 12 24 Z M 17 21 L 20 21 L 20 24 L 17 24 Z M 22 21 L 25 21 L 25 24 L 22 24 Z M 27 21 L 30 21 L 30 24 L 27 24 Z M 16 31 C 16.128906 31 16.261719 31.019531 16.375 31.0625 C 16.253906 31.132813 16.15625 31.253906 16.15625 31.40625 C 16.15625 31.632813 16.335938 31.84375 16.5625 31.84375 C 16.714844 31.84375 16.867188 31.75 16.9375 31.625 C 16.988281 31.742188 17 31.863281 17 32 C 17 32.550781 16.550781 33 16 33 C 15.449219 33 15 32.550781 15 32 C 15 31.449219 15.449219 31 16 31 Z"></path>
          </svg>
        )
      }
    ],
    'Cloud & Databases': [
      {
        name: 'PostgreSQL',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <path fill="#fff" d="M44.083,29.79c-0.183-0.829-0.935-1.796-2.452-1.796c-0.31,0-0.649,0.039-1.035,0.119c-0.708,0.146-1.311,0.217-1.842,0.241c4.133-7.04,6.816-16.819,4.159-20.214c-3.501-4.473-8.214-5.141-10.711-5.141L31.967,3c-0.929,0.015-1.893,0.129-2.863,0.339l-3.583,0.774C25.033,4.052,24.536,4.009,24.018,4l-0.03,0l-0.016,0l-0.152-0.001c-1.593,0-3.046,0.338-4.341,0.973l-1.251-0.493c-1.72-0.678-4.308-1.485-6.868-1.485c-0.144,0-0.287,0.003-0.431,0.008C8.407,3.093,6.241,4.05,4.664,5.769C2.696,7.915,1.8,11.054,2.003,15.1C2.013,15.309,4.461,36,11.4,36h0.025l0.064-0.001c0.901-0.022,1.76-0.384,2.563-1.077c0.613,0.46,1.406,0.732,2.145,0.84c0.488,0.115,1.366,0.278,2.418,0.278c1.284,0,2.442-0.263,3.44-0.738c-0.001,0.88-0.006,1.994-0.016,3.418l-0.001,0.075l0.005,0.075c0.097,1.419,0.342,2.698,0.711,3.701c1.051,2.859,2.866,4.434,5.111,4.434c0.093,0,0.188-0.003,0.284-0.009c1.846-0.114,3.717-1.151,5.004-2.772c1.393-1.755,1.715-3.607,1.839-5.026L35,39.111v-0.088v-4.079l0.103,0.01l0.436,0.038l0.042,0.004l0.042,0.002c0.124,0.006,0.252,0.008,0.381,0.008c1.507,0,3.362-0.391,4.616-0.974C41.819,33.476,44.559,31.948,44.083,29.79z"></path>
            <path fill="#0277bd" d="M33,34c0-0.205,0.012-0.376,0.018-0.565C33.008,33.184,33,33,33,33s0.012-0.009,0.032-0.022c0.149-2.673,0.886-3.703,1.675-4.29c-0.11-0.153-0.237-0.318-0.356-0.475c-0.333-0.437-0.748-0.979-1.192-1.674l-0.082-0.158c-0.067-0.164-0.229-0.447-0.435-0.819c-1.183-2.14-3.645-6.592-1.96-9.404c0.738-1.232,2.122-1.942,4.121-2.117C33.986,11.718,30.925,6.115,23.985,6c-0.002,0-0.004,0-0.006,0c-6.041-0.098-8.026,5.392-8.672,8.672c0.89-0.377,1.906-0.606,2.836-0.606c0.014,0,0.029,0,0.043,0c2.29,0.017,3.865,1.239,4.323,3.354c0.335,1.552,0.496,2.91,0.492,4.153c-0.01,2.719-0.558,4.149-1.042,5.411l-0.154,0.408c-0.124,0.334-0.255,0.645-0.379,0.937c-0.126,0.298-0.237,0.563-0.318,0.802c0.484,0.11,0.864,0.265,1.125,0.38l0.151,0.066c0.047,0.02,0.094,0.043,0.137,0.069c0.848,0.516,1.376,1.309,1.489,2.233c0.061,0.498,0.051,3.893,0.03,6.855c0.087,1.285,0.305,2.364,0.593,3.146c0.409,1.114,1.431,3.241,3.394,3.119c1.37-0.085,2.687-0.919,3.561-2.019c0.938-1.181,1.284-2.487,1.414-3.958V34z"></path>
            <path fill="#0277bd" d="M15.114 28.917c-1.613-1.683-2.399-3.947-2.104-6.056.285-2.035.124-4.027.037-5.098-.029-.357-.048-.623-.047-.77 0-.008.002-.015.003-.023 0-.004-.002-.007-.002-.011.121-3.021 1.286-7.787 4.493-10.62C15.932 5.724 13.388 4.913 11 5 7.258 5.136 3.636 7.724 4 15c.137 2.73 3.222 19.103 7.44 19 .603-.015 1.229-.402 1.872-1.176 1.017-1.223 2.005-2.332 2.708-3.104C15.705 29.481 15.401 29.217 15.114 28.917zM37.023 14.731c.015.154.002.286-.022.408.031.92-.068 1.813-.169 2.677-.074.636-.15 1.293-.171 1.952-.021.645.07 1.282.166 1.956.225 1.578.459 3.359-.765 5.437.225.296.423.571.581.837 4.61-7.475 6.468-16.361 4.695-18.626C38.655 5.944 34.941 4.952 31.999 5c-.921.015-1.758.139-2.473.294C34.602 7.754 36.863 13.026 37.023 14.731zM41 30.071c-2.665.55-3.947.257-4.569-.126-.1.072-.2.133-.293.19-.372.225-.961.583-1.105 2.782.083.016.156.025.246.044L35.714 33c1.32.06 3.049-.31 4.063-.781C41.962 31.205 43.153 29.627 41 30.071zM22.023 32.119c-.037-.298-.198-.539-.492-.732l-.108-.047C21.062 31.181 20.653 31 20 31h-.004c-.127.01-.253.019-.38.019-.052 0-.103-.007-.155-.009-.474.365-1.148.647-2.816.99-2.98.759-1.221 1.655-.078 1.794 1.106.277 3.735.614 5.481-.809C22.043 32.537 22.035 32.229 22.023 32.119z"></path>
            <path fill="#0277bd" d="M20.681 18.501c-.292.302-.753.566-1.262.484-.828-.134-1.463-1.133-1.417-1.508h0c.044-.374.751-.569 1.578-.435.287.047.548.128.768.228-.32-.688-.899-1.085-1.782-1.182-1.565-.174-3.226.644-3.56 1.097.007.11.02.251.033.417.093 1.147.265 3.284-.05 5.537-.208 1.485.393 3.169 1.567 4.395.757.79 1.641 1.29 2.513 1.438.111-.478.309-.944.513-1.425.113-.265.233-.547.346-.852l.162-.427c.443-1.155.9-2.35.909-4.703C21.003 20.66 20.892 19.627 20.681 18.501zM34.847 22.007c-.104-.729-.211-1.484-.185-2.303.023-.742.105-1.442.184-2.119.062-.533.11-1.045.138-1.55-1.289.107-2.145.479-2.551 1.108.168-.057.358-.102.568-.129.892-.116 1.543.141 1.618.637.055.363-.253.705-.388.836-.277.269-.626.442-.981.488-.064.008-.129.012-.192.012-.353 0-.69-.121-.949-.3.112 1.973 1.567 4.612 2.283 5.907.153.277.271.498.369.688C35.154 24.163 35.009 23.143 34.847 22.007z"></path>
          </svg>
        )
      },
      {
        name: 'Redis',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <path fill="#b71c1c" d="M45,29.316c0-0.637-1.686-1.153-3.769-1.153c-1.812,0-3.32,0.391-3.683,0.911	c-3.586-1.694-7.173-3.388-10.759-5.083c-1.248-0.59-2.673-0.584-3.918,0.014c-3.818,1.837-7.636,3.674-11.454,5.511	c-0.864-0.126-1.907-0.201-3.032-0.201C5.408,29.316,3,29.832,3,30.469v3.46c0,0.033,0.033,0.064,0.045,0.096	c-0.146,0.555,0.07,1.205,0.649,1.478c5.641,2.665,11.281,5.329,16.922,7.994c1.432,0.677,3.068,0.671,4.496-0.016	c6.442-3.1,12.884-6.199,19.327-9.299c0.484-0.233,0.651-0.786,0.509-1.247C44.971,32.882,45,32.83,45,32.775V29.316z"></path>
            <path fill="#e53935" d="M20.616,39.158c-5.641-2.522-11.281-5.044-16.922-7.566c-0.922-0.412-0.926-1.727-0.007-2.146	c6.395-2.912,12.789-5.824,19.184-8.736c1.244-0.567,2.67-0.572,3.918-0.014c5.881,2.63,11.763,5.259,17.644,7.889	c0.754,0.337,0.758,1.414,0.006,1.756c-6.442,2.934-12.884,5.868-19.327,8.801C23.684,39.792,22.048,39.798,20.616,39.158z"></path>
            <path fill="#b71c1c" d="M45,21.675c0-0.637-1.686-1.153-3.769-1.153c-1.812,0-3.32,0.391-3.683,0.911	c-3.586-1.694-7.173-3.388-10.759-5.083c-1.248-0.59-2.673-0.584-3.918,0.014c-3.818,1.837-7.636,3.674-11.454,5.511	c-0.864-0.126-1.907-0.201-3.032-0.201C5.408,21.675,3,22.192,3,22.829v3.46c0,0.033,0.033,0.064,0.045,0.096	c-0.146,0.555,0.07,1.205,0.649,1.478c5.641,2.665,11.281,5.329,16.922,7.994c1.432,0.677,3.068,0.671,4.496-0.016	c6.442-3.1,12.884-6.199,19.327-9.299c0.484-0.233,0.651-0.786,0.509-1.247C44.971,25.242,45,25.19,45,25.135V21.675z"></path>
            <path fill="#e53935" d="M20.616,31.517c-5.641-2.522-11.281-5.044-16.922-7.566c-0.922-0.412-0.926-1.727-0.007-2.146	c6.395-2.912,12.789-5.824,19.184-8.736c1.244-0.567,2.67-0.572,3.918-0.014c5.881,2.63,11.763,5.259,17.644,7.889	c0.754,0.337,0.758,1.414,0.006,1.756c-6.442,2.934-12.884,5.868-19.327,8.801C23.684,32.152,22.048,32.158,20.616,31.517z"></path>
            <path fill="#b71c1c" d="M45,14.035c0-0.637-1.686-1.153-3.769-1.153c-1.812,0-3.32,0.391-3.683,0.911	c-3.586-1.694-7.173-3.388-10.759-5.083c-1.248-0.59-2.673-0.584-3.918,0.014c-3.818,1.837-7.636,3.674-11.454,5.511	c-0.864-0.126-1.907-0.201-3.032-0.201C5.408,14.035,3,14.551,3,15.188v3.46c0,0.033,0.033,0.064,0.045,0.096	c-0.146,0.555,0.07,1.205,0.649,1.478c5.641,2.665,11.281,5.329,16.922,7.994c1.432,0.677,3.068,0.671,4.496-0.016	c6.442-3.1,12.884-6.199,19.327-9.299c0.484-0.233,0.651-0.786,0.509-1.247C44.971,17.601,45,17.549,45,17.494V14.035z"></path>
            <path fill="#e53935" d="M20.616,23.877c-5.641-2.522-11.281-5.044-16.922-7.566c-0.922-0.412-0.926-1.727-0.007-2.146	c6.395-2.912,12.789-5.824,19.184-8.736c1.244-0.567,2.67-0.572,3.918-0.014c5.881,2.63,11.763,5.259,17.644,7.889	c0.754,0.337,0.758,1.414,0.006,1.756c-6.442,2.934-12.884,5.868-19.327,8.801C23.684,24.512,22.048,24.517,20.616,23.877z"></path>
            <path fill="#fff" d="M18.748,14.741c-0.002,1.042-2.762,2.057-5.093,2.086c-2.419,0.03-5.273-0.993-5.282-2.051	c-0.009-1.061,2.842-2.161,5.311-2.135C16.017,12.665,18.751,13.703,18.748,14.741z"></path>
            <path fill="#fff" d="M17.038,18.471c2.393,1.022,4.785,2.045,7.178,3.067c1.054-1.56,2.108-3.12,3.162-4.68	C23.931,17.396,20.485,17.934,17.038,18.471z"></path>
            <path fill="#fff" d="M21.86,9.775c-1.101,0.401-2.203,0.801-3.304,1.202c1.507,0.132,3.015,0.264,4.522,0.395	c0.48,0.796,0.959,1.592,1.439,2.387c0.295-0.722,0.59-1.444,0.885-2.166c1.286-0.1,2.572-0.2,3.858-0.3	c-0.997-0.419-1.994-0.839-2.991-1.259c0.254-0.608,0.508-1.216,0.762-1.825c-0.97,0.29-1.939,0.58-2.909,0.87	c-1.07-0.422-2.14-0.843-3.21-1.265C21.228,8.468,21.544,9.122,21.86,9.775z"></path>
            <path fill="#b71c1c" d="M27.267,14.619c2.271-0.906,4.543-1.813,6.814-2.719c1.962,0.834,3.924,1.668,5.886,2.502	c-2.202,0.876-4.403,1.752-6.605,2.629C31.331,16.226,29.299,15.423,27.267,14.619z"></path>
            <path fill="#a01c1c" d="M34.082,11.963c-0.005,1.596-0.01,3.191-0.015,4.787c1.967-0.783,3.934-1.565,5.901-2.348	C38.006,13.589,36.044,12.776,34.082,11.963z"></path>
          </svg>
        )
      },
      {
        name: 'MongoDB',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <path fill="#5d4037" d="M42,17.3C42,37.8,24,44,24,44S6,37.8,6,17.3c0-2.5,0.2-4.6,0.4-6.3c0.3-2.5,2-4.5,4.4-5.1 C13.9,5,18.8,4,24,4s10.1,1,13.3,1.9c2.4,0.6,4.1,2.7,4.4,5.1C41.8,12.7,42,14.9,42,17.3z"></path>
            <path fill="#4caf50" d="M24,7c4.9,0,9.5,1,12.5,1.8c1.2,0.3,2,1.3,2.2,2.6c0.2,1.9,0.3,3.9,0.3,5.9c0,15.6-11.5,21.9-15,23.4 c-3.5-1.6-15-7.9-15-23.4c0-2,0.1-4,0.3-5.9c0.1-1.3,1-2.3,2.2-2.6C14.5,8,19.1,7,24,7 M24,4c-5.2,0-10.1,1-13.3,1.9 C8.4,6.5,6.6,8.6,6.4,11C6.2,12.7,6,14.9,6,17.3C6,37.8,24,44,24,44s18-6.2,18-26.7c0-2.5-0.2-4.6-0.4-6.3c-0.3-2.5-2-4.5-4.4-5.1 C34.1,5,29.2,4,24,4L24,4z"></path>
            <path fill="#dcedc8" d="M23 28H25V36H23z"></path>
            <path fill="#4caf50" d="M24,10c0,0-6,5-6,13c0,5.2,3.3,8.5,5,10l1-3l1,3c1.7-1.5,5-4.8,5-10C30,15,24,10,24,10z"></path>
            <path fill="#81c784" d="M24,10c0,0-6,5-6,13c0,5.2,3.3,8.5,5,10l1-3V10z"></path>
          </svg>
        )
      },
      {
        name: 'Apache Spark',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <path fill="#e65100" fillRule="evenodd" d="M33.011,18.14c-0.031-0.067-0.045-0.1-0.062-0.133 c-0.452-0.86-0.903-1.72-1.36-2.581c-0.046-0.086-0.04-0.137,0.023-0.212c0.72-0.84,1.43-1.686,2.15-2.522 c0.025-0.03,0.048-0.061,0.058-0.113c-0.209,0.055-0.418,0.108-0.629,0.164c-0.868,0.23-1.744,0.459-2.604,0.693 c-0.081,0.022-0.117-0.002-0.158-0.069c-0.493-0.824-0.989-1.651-1.488-2.464c-0.025-0.043-0.053-0.084-0.108-0.12 c-0.04,0.22-0.08,0.438-0.12,0.658c-0.138,0.775-0.277,1.546-0.414,2.325c-0.015,0.084-0.035,0.167-0.043,0.251 c-0.007,0.08-0.048,0.11-0.121,0.133c-1.024,0.322-2.046,0.646-3.069,0.971c-0.045,0.014-0.089,0.033-0.137,0.076 c0.837,0.332,1.674,0.665,2.522,1.003c-0.031,0.025-0.051,0.044-0.074,0.058c-0.523,0.338-1.047,0.677-1.569,1.016 c-0.063,0.041-0.112,0.047-0.183,0.015c-0.625-0.281-1.255-0.558-1.883-0.837c-0.281-0.126-0.534-0.292-0.73-0.534 c-0.445-0.544-0.357-1.162,0.236-1.546c0.194-0.124,0.415-0.216,0.635-0.288c1.003-0.327,2.011-0.642,3.011-0.958 c0.084-0.027,0.123-0.065,0.139-0.156c0.135-0.776,0.273-1.558,0.414-2.325c0.075-0.415,0.114-0.839,0.316-1.221 c0.077-0.146,0.17-0.289,0.281-0.411c0.4-0.444,0.957-0.46,1.383-0.038c0.143,0.143,0.265,0.31,0.371,0.484 c0.465,0.759,0.923,1.523,1.383,2.29c0.054,0.09,0.103,0.108,0.202,0.082c1.122-0.301,2.243-0.597,3.371-0.894 c0.232-0.061,0.466-0.083,0.704-0.039c0.517,0.097,0.744,0.491,0.568,0.992c-0.079,0.228-0.217,0.42-0.372,0.602 c-0.783,0.922-1.569,1.848-2.348,2.767c-0.064,0.075-0.065,0.129-0.021,0.214c0.47,0.885,0.935,1.767,1.407,2.662 c0.112,0.212,0.198,0.432,0.2,0.675c0.005,0.553-0.4,1.007-0.95,1.088c-0.308,0.045-0.594-0.021-0.883-0.11 c-0.703-0.217-1.407-0.431-2.116-0.644c-0.065-0.02-0.09-0.045-0.102-0.116c-0.081-0.496-0.17-0.992-0.256-1.488 c-0.002-0.014,0.002-0.028,0.004-0.059c0.803,0.222,1.604,0.441,2.429,0.67" clipRule="evenodd" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" fillRule="evenodd" d="M31.616,25.405c-0.635-0.001-1.267-0.004-1.906-0.001 c-0.084,0-0.131-0.024-0.178-0.095c-0.751-1.144-1.511-2.29-2.255-3.429c-0.024-0.036-0.05-0.071-0.092-0.133 c-0.162,1.232-0.321,2.441-0.48,3.65h-1.662c0.02-0.162,0.037-0.319,0.057-0.474c0.162-1.244,0.325-2.476,0.488-3.72 c0.156-1.186,0.31-2.371,0.468-3.557c0.005-0.035,0.028-0.08,0.057-0.099c0.572-0.373,1.146-0.743,1.72-1.112 c0.008-0.005,0.02-0.006,0.05-0.015c-0.173,1.325-0.345,2.639-0.518,3.952c0.007,0.005,0.014,0.01,0.02,0.014 c0.901-0.997,1.802-1.999,2.72-3.011c0.026,0.153,0.05,0.285,0.072,0.416c0.065,0.375,0.127,0.753,0.195,1.129 c0.014,0.076-0.006,0.122-0.057,0.176c-0.582,0.609-1.162,1.221-1.744,1.837c-0.025,0.027-0.05,0.055-0.079,0.086 c0.019,0.029,0.035,0.058,0.053,0.084c1.001,1.407,1.999,2.813,2.999,4.22c0.018,0.025,0.044,0.045,0.067,0.068v0.022" clipRule="evenodd" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" fillRule="evenodd" d="M11.971,21.686c-0.025-0.129-0.044-0.32-0.101-0.498 c-0.279-0.859-1.159-1.325-2.069-1.117c-1.001,0.232-1.72,1.019-1.813,2.046c-0.077,0.756,0.33,1.488,1.086,1.755 c0.609,0.22,1.197,0.128,1.744-0.199c0.722-0.432,1.112-1.075,1.162-1.988H11.971z M7.577,24.882 c-0.049,0.37-0.096,0.717-0.142,1.066c-0.061,0.463-0.122,0.926-0.18,1.395c-0.007,0.054-0.023,0.078-0.081,0.078 c-0.457-0.002-0.914-0.001-1.372-0.002c-0.01,0-0.021-0.005-0.045-0.013c0.028-0.219,0.055-0.438,0.083-0.657 c0.101-0.767,0.201-1.534,0.303-2.302c0.117-0.879,0.209-1.755,0.359-2.627c0.265-1.546,1.581-2.871,3.115-3.208 c0.892-0.193,1.744-0.104,2.522,0.399c0.776,0.5,1.221,1.232,1.325,2.139c0.144,1.29-0.331,2.36-1.244,3.255 c-0.602,0.582-1.325,0.952-2.15,1.078c-0.857,0.129-1.662-0.014-2.383-0.518c-0.026-0.019-0.055-0.035-0.1-0.063" clipRule="evenodd" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" fillRule="evenodd" d="M6.81,17.559c-0.511,0.381-1.005,0.749-1.5,1.117 c-0.08-0.126-0.151-0.251-0.235-0.368c-0.215-0.301-0.482-0.525-0.871-0.552c-0.323-0.023-0.6,0.083-0.82,0.322 c-0.196,0.213-0.222,0.516-0.039,0.757c0.202,0.265,0.423,0.516,0.65,0.761c0.375,0.407,0.767,0.797,1.139,1.209 c0.338,0.372,0.609,0.788,0.693,1.302c0.1,0.604-0.021,1.174-0.307,1.709c-0.529,0.982-1.36,1.558-2.464,1.732 c-0.486,0.078-0.969,0.063-1.441-0.076c-0.629-0.185-1.067-0.597-1.348-1.174c-0.099-0.206-0.176-0.423-0.265-0.644 c0.55-0.294,1.086-0.581,1.627-0.871c0.019,0.045,0.032,0.083,0.05,0.119c0.093,0.185,0.169,0.381,0.282,0.552 c0.341,0.506,0.889,0.659,1.441,0.409c0.143-0.065,0.281-0.155,0.399-0.259c0.358-0.319,0.425-0.763,0.16-1.162 c-0.152-0.23-0.343-0.437-0.529-0.643c-0.444-0.493-0.907-0.971-1.337-1.476c-0.299-0.346-0.502-0.749-0.567-1.209 c-0.07-0.507,0.031-0.983,0.294-1.407c0.654-1.059,1.604-1.604,2.86-1.569c0.717,0.026,1.29,0.362,1.732,0.919 c0.131,0.165,0.255,0.336,0.388,0.515" clipRule="evenodd" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" fillRule="evenodd" d="M18.945,23.197c-0.084,0.638-0.163,1.244-0.244,1.848 c-0.005,0.031-0.029,0.073-0.055,0.085c-1.244,0.574-2.871,0.494-3.882-0.661c-0.546-0.621-0.775-1.36-0.742-2.174 c0.079-1.895,1.651-3.557,3.534-3.79c1.098-0.135,2.057,0.162,2.801,1.016c0.507,0.581,0.742,1.279,0.707,2.046 c-0.023,0.507-0.102,1.01-0.165,1.511c-0.09,0.714-0.187,1.43-0.281,2.139c-0.004,0.025-0.009,0.05-0.015,0.083h-1.476 c0.02-0.164,0.038-0.324,0.059-0.485c0.107-0.824,0.226-1.651,0.32-2.476c0.059-0.514,0.022-1.024-0.214-1.5 c-0.25-0.506-0.668-0.774-1.221-0.832c-1.142-0.121-2.232,0.672-2.464,1.79c-0.16,0.742,0.093,1.453,0.684,1.848 c0.575,0.382,1.186,0.384,1.813,0.136c0.319-0.126,0.588-0.325,0.846-0.594" clipRule="evenodd" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" fillRule="evenodd" d="M25.223,18.698c-0.068,0.514-0.135,1.019-0.202,1.534 c-0.314,0-0.621-0.002-0.928,0c-0.249,0.002-0.475,0.163-0.551,0.395c-0.029,0.091-0.04,0.188-0.053,0.284 c-0.156,1.186-0.31,2.36-0.465,3.534c-0.039,0.298-0.077,0.595-0.116,0.897h-1.546c0.029-0.227,0.056-0.446,0.084-0.666 c0.1-0.765,0.201-1.534,0.302-2.29c0.088-0.661,0.166-1.325,0.27-1.988c0.138-0.883,1.017-1.674,1.906-1.709 c0.425-0.019,0.852-0.003,1.29-0.003" clipRule="evenodd" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" d="M8.867,16.466H9.25l-0.09-0.579L8.867,16.466z M9.31,16.841H8.674l-0.202,0.396H8.021l0.994-1.86 H9.45l0.338,1.86H9.371L9.31,16.841" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" d="M11.587,15.757h-0.227l-0.076,0.429h0.227c0.137,0,0.245-0.09,0.245-0.259 C11.756,15.815,11.688,15.757,11.587,15.757L11.587,15.757z M11.039,15.383h0.595c0.312,0,0.529,0.186,0.529,0.504 c0,0.402-0.284,0.672-0.688,0.672h-0.257l-0.121,0.68h-0.388l0.328-1.86" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" d="M13.482,16.466h0.382l-0.09-0.579L13.482,16.466z M13.924,16.841h-0.636l-0.202,0.396h-0.451 l0.994-1.86h0.435l0.338,1.86h-0.417L13.924,16.841" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" d="M16.388,17.176c-0.131,0.06-0.275,0.096-0.421,0.096c-0.492,0-0.8-0.368-0.8-0.83 c0-0.591,0.496-1.087,1.087-1.087c0.148,0,0.281,0.035,0.391,0.095l-0.055,0.445c-0.082-0.09-0.214-0.153-0.377-0.153 c-0.338,0-0.639,0.306-0.639,0.66c0,0.27,0.17,0.481,0.437,0.481c0.164,0,0.322-0.063,0.429-0.15L16.388,17.176" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" d="M18.829,16.49h-0.808l-0.131,0.747h-0.387l0.328-1.86h0.388l-0.13,0.735h0.808l0.131-0.735h0.388 l-0.328,1.86H18.7l0.13-0.747" transform="matrix(1.33 0 0 1.33 0 0)"></path>
            <path fill="#424242" d="M20.224,17.234l0.328-1.86h1.03l-0.065,0.374h-0.642l-0.065,0.36h0.589l-0.065,0.374h-0.589 l-0.065,0.374h0.642l-0.065,0.374h-1.03" transform="matrix(1.33 0 0 1.33 0 0)"></path>
          </svg>
        )
      }
    ],
    'Development': [
      {
        name: 'Python',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <path fill="#0277BD" d="M24.047,5c-1.555,0.005-2.633,0.142-3.936,0.367c-3.848,0.67-4.549,2.077-4.549,4.67V14h9v2H15.22h-4.35c-2.636,0-4.943,1.242-5.674,4.219c-0.826,3.417-0.863,5.557,0,9.125C5.851,32.005,7.294,34,9.931,34h3.632v-5.104c0-2.966,2.686-5.896,5.764-5.896h7.236c2.523,0,5-1.862,5-4.377v-8.586c0-2.439-1.759-4.263-4.218-4.672C27.406,5.359,25.589,4.994,24.047,5z M19.063,9c0.821,0,1.5,0.677,1.5,1.502c0,0.833-0.679,1.498-1.5,1.498c-0.837,0-1.5-0.664-1.5-1.498C17.563,9.68,18.226,9,19.063,9z"></path>
            <path fill="#FFC107" d="M23.078,43c1.555-0.005,2.633-0.142,3.936-0.367c3.848-0.67,4.549-2.077,4.549-4.67V34h-9v-2h9.343h4.35c2.636,0,4.943-1.242,5.674-4.219c0.826-3.417,0.863-5.557,0-9.125C41.274,15.995,39.831,14,37.194,14h-3.632v5.104c0,2.966-2.686,5.896-5.764,5.896h-7.236c-2.523,0-5,1.862-5,4.377v8.586c0,2.439,1.759,4.263,4.218,4.672C19.719,42.641,21.536,43.006,23.078,43z M28.063,39c-0.821,0-1.5-0.677-1.5-1.502c0-0.833,0.679-1.498,1.5-1.498c0.837,0,1.5,0.664,1.5,1.498C29.563,38.32,28.899,39,28.063,39z"></path>
          </svg>
        )
      },
      {
        name: 'TypeScript',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <rect width="36" height="36" x="6" y="6" fill="#1976d2"></rect>
            <polygon fill="#fff" points="27.49,22 14.227,22 14.227,25.264 18.984,25.264 18.984,40 22.753,40 22.753,25.264 27.49,25.264"></polygon>
            <path fill="#fff" d="M39.194,26.084c0,0-1.787-1.192-3.807-1.192s-2.747,0.96-2.747,1.986 c0,2.648,7.381,2.383,7.381,7.712c0,8.209-11.254,4.568-11.254,4.568V35.22c0,0,2.152,1.622,4.733,1.622s2.483-1.688,2.483-1.92 c0-2.449-7.315-2.449-7.315-7.878c0-7.381,10.658-4.469,10.658-4.469L39.194,26.084z"></path>
          </svg>
        )
      },
      {
        name: 'React',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 40 40">
            <path fill="#4e7ab5" d="M20,28.9C8.598,28.9,0,25.17,0,20s8.598-9,20-9s20,3.83,20,9S31.402,28.9,20,28.9z M20,13.932 c-9.729,0-17.125,3.266-17.125,6.131S10.271,26.068,20,26.068s17.125-3.266,17.125-6.131S29.729,13.932,20,13.932z"></path>
            <path fill="#4e7ab5" d="M12.402,38C12.401,38,12.402,38,12.402,38c-0.931,0-1.781-0.216-2.528-0.642 c-1.22-0.697-2.095-1.928-2.532-3.562c-1.146-4.282,0.703-11.482,4.713-18.344C16.76,7.407,23.007,2.003,27.599,2.003 c0.93,0,1.78,0.216,2.527,0.642c1.218,0.695,2.094,1.925,2.531,3.558c1.147,4.282-0.703,11.483-4.715,18.345 C23.241,32.594,16.995,38,12.402,38z M27.599,5.003c-2.888,0-8.409,4.193-12.954,11.963c-4.123,7.056-5.332,12.909-4.404,16.054 c0.251,0.849,0.605,1.438,1.121,1.732c2.361,1.348,8.809-2.85,13.991-11.717c4.125-7.057,5.46-12.785,4.406-16.055 c-0.271-0.841-0.604-1.435-1.119-1.728C28.347,5.084,28.006,5.003,27.599,5.003z"></path>
            <path fill="#4e7ab5" d="M27.599,37.997C27.599,37.997,27.599,37.997,27.599,37.997c-4.597-0.001-10.843-5.405-15.544-13.449 c-4.01-6.862-5.859-14.063-4.713-18.344C7.779,4.57,8.654,3.339,9.873,2.643C10.621,2.216,11.471,2,12.4,2 c4.595,0,10.84,5.406,15.542,13.452c4.011,6.861,5.86,14.062,4.714,18.345c-0.438,1.633-1.313,2.863-2.53,3.558 C29.379,37.781,28.528,37.997,27.599,37.997z M12.4,5c-0.407,0-0.747,0.082-1.04,0.248c-0.515,0.294-0.874,0.881-1.12,1.732 c-0.928,3.208,0.281,8.999,4.404,16.055c4.541,7.769,10.063,11.962,12.954,11.962l0,0c0.408,0,0.748-0.082,1.041-0.249 c0.514-0.292,0.883-0.876,1.118-1.728c0.867-3.146-0.281-9-4.405-16.055C20.811,9.194,15.29,5,12.4,5z"></path>
            <path fill="#8bb7f0" d="M23.5,20c0,1.935-1.565,3.5-3.5,3.5s-3.5-1.565-3.5-3.5s1.565-3.5,3.5-3.5S23.5,18.065,23.5,20z"></path>
            <path fill="#4e7ab5" d="M20,24c-2.206,0-4-1.794-4-4s1.794-4,4-4s4,1.794,4,4S22.206,24,20,24z M20,17c-1.654,0-3,1.346-3,3 s1.346,3,3,3s3-1.346,3-3S21.654,17,20,17z"></path>
            <path fill="#8bb7f0" d="M20,28.068C9.346,28.068,1,24.524,1,20s8.346-8.068,19-8.068S39,15.476,39,20 S30.654,28.068,20,28.068z M20,12.932c-9.757,0-18,3.237-18,7.068s8.243,7.068,18,7.068S38,23.832,38,20S29.757,12.932,20,12.932z"></path>
            <path fill="#8bb7f0" d="M12.402,37C12.401,37,12.402,37,12.402,37c-0.755,0-1.438-0.172-2.033-0.511 c-0.996-0.569-1.689-1.562-2.062-2.952c-1.081-4.037,0.729-10.938,4.61-17.581C17.379,8.33,23.416,3.003,27.599,3.003 c0.754,0,1.438,0.172,2.032,0.511c0.995,0.568,1.688,1.56,2.061,2.948c1.081,4.037-0.729,10.938-4.612,17.582 C22.621,31.672,16.586,37,12.402,37z M27.599,4.003c-3.784,0-9.595,5.239-13.817,12.458c-3.695,6.325-5.507,13.083-4.508,16.818 c0.301,1.123,0.836,1.91,1.592,2.342C11.307,35.872,11.823,36,12.401,36c3.785,0,9.595-5.24,13.814-12.461 c3.697-6.326,5.51-13.085,4.509-16.818c-0.3-1.121-0.835-1.908-1.59-2.338C28.693,4.131,28.177,4.003,27.599,4.003z"></path>
            <g>
              <path fill="#8bb7f0" d="M27.599,36.997C27.599,36.997,27.599,36.997,27.599,36.997c-4.187-0.001-10.224-5.327-14.681-12.953 C9.036,17.401,7.227,10.5,8.308,6.463c0.372-1.39,1.065-2.383,2.062-2.952C10.964,3.172,11.647,3,12.4,3 c4.185,0,10.221,5.328,14.679,12.956c3.883,6.642,5.692,13.543,4.61,17.582c-0.371,1.389-1.064,2.381-2.059,2.948 C29.036,36.825,28.353,36.997,27.599,36.997z M12.4,4c-0.577,0-1.094,0.128-1.535,0.379c-0.756,0.432-1.291,1.219-1.592,2.342 c-0.999,3.734,0.813,10.493,4.508,16.818C18,30.757,23.812,35.996,27.599,35.997l0,0c0.578,0,1.095-0.128,1.536-0.38 c0.754-0.43,1.289-1.217,1.589-2.338c1-3.735-0.812-10.494-4.508-16.818C21.996,9.241,16.187,4,12.4,4z"></path>
            </g>
          </svg>
        )
      },
      {
        name: 'Next.js',
        icon: (
          <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="48" height="48" viewBox="0 0 48 48">
            <path fill="#212121" d="M18.974,31.5c0,0.828-0.671,1.5-1.5,1.5s-1.5-0.672-1.5-1.5v-14c0-0.653,0.423-1.231,1.045-1.43 c0.625-0.198,1.302,0.03,1.679,0.563l16.777,23.704C40.617,36.709,44,30.735,44,24c0-11-9-20-20-20S4,13,4,24s9,20,20,20 c3.192,0,6.206-0.777,8.89-2.122L18.974,22.216V31.5z M28.974,16.5c0-0.828,0.671-1.5,1.5-1.5s1.5,0.672,1.5,1.5v13.84l-3-4.227 V16.5z"></path>
          </svg>
        )
      }
    ]
  };

  // Project stats
  const stats = [
    { label: 'Models Deployed', value: 25, suffix: '+' },
    { label: 'Lines of Code', value: 100, suffix: 'K+' },
    { label: 'AI Projects', value: 15, suffix: '+' },
    { label: 'Years Experience', value: 3, suffix: '+' }
  ];

  // Code snippets that cycle
  const codeSnippets = [
    `# AI Agent Pipeline
agent = CrewAI.Agent(
    role="ML Engineer",
    goal="Deploy scalable AI systems",
    tools=[pytorch_tool, k8s_tool]
)`,
    `# Computer Vision Model
model = YOLO('yolov8n.pt')
results = model.track(
    source="drone_footage.mp4",
    tracker="deepSORT"
)`,
    `# MLOps Pipeline
pipeline = Pipeline([
    ('preprocess', DataTransformer()),
    ('model', PyTorchModel()),
    ('deploy', KubernetesDeployer())
])`
  ];

  const [currentSnippet, setCurrentSnippet] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentSnippet((prev) => (prev + 1) % codeSnippets.length);
    }, 4000);
    return () => clearInterval(interval);
  }, []);

  return (
    <div className="min-h-screen bg-dark-bg">
      <Navbar />
      
      {/* Floating Background Elements */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        {[...Array(20)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute w-1 h-1 bg-neon-green rounded-full opacity-20"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
            }}
            animate={{
              y: [0, -30, 0],
              opacity: [0.2, 0.8, 0.2],
            }}
            transition={{
              duration: 3 + Math.random() * 2,
              repeat: Infinity,
              delay: Math.random() * 2,
            }}
          />
        ))}
      </div>

      {/* Hero Section */}
      <section className="relative pt-20 pb-16 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-center mb-16"
          >
            <motion.div 
              className="flex items-center justify-center mb-6"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.3 }}
            >
              <Code2 className="w-12 h-12 md:w-16 md:h-16 text-neon-green mr-4" />
              <h1 className="text-5xl md:text-7xl font-bold text-white font-mono">
                Tafar M
              </h1>
            </motion.div>
            
            <div className="text-2xl md:text-3xl text-neon-green font-mono mb-8 h-12">
              {typedText}
              <motion.span
                animate={{ opacity: [1, 0] }}
                transition={{ duration: 0.8, repeat: Infinity }}
                className="ml-1"
              >
                |
              </motion.span>
            </div>
            
            <motion.p
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 1 }}
              className="text-xl text-gray-400 font-mono max-w-4xl mx-auto leading-relaxed"
            >
              Building intelligent systems that solve real-world problems through cutting-edge AI and machine learning
            </motion.p>
          </motion.div>
        </div>
      </section>

      {/* Story Section */}
      <section className="py-16 px-4 sm:px-6 lg:px-8 bg-dark-card">
        <div className="max-w-6xl mx-auto">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="grid lg:grid-cols-2 gap-12 items-center"
          >
            <div className="space-y-6">
              <h2 className="text-4xl font-bold text-white font-mono mb-8">
                My{' '}
                <span className="text-neon-green">{'{Journey}'}</span>
              </h2>
              
              <div className="space-y-4 text-gray-300 font-mono leading-relaxed">
                <p>
                  I'm Tafar M, a Machine Learning Engineer and AI practitioner passionate about building 
                  intelligent systems that solve real-world problems. My journey began with computer vision 
                  and evolved into designing scalable AI agents, AIOps pipelines, and automation-driven solutions.
                </p>
                
                <p>
                  I specialize in developing production-ready ML models using PyTorch, TensorFlow, and modern 
                  MLOps frameworks. My expertise spans computer vision, natural language processing, and 
                  intelligent automation systems. I'm particularly focused on AI agents, multi-modal AI systems, 
                  and building robust deployment pipelines using Kubernetes, Ray Serve, and cloud-native architectures.
                </p>
                
                <p>
                  Currently, I'm working on advancing AI agent frameworks, exploring cutting-edge techniques 
                  in xAI, CrewAI, and building scalable AI infrastructure. I believe in the power of AI 
                  to transform industries through intelligent automation and data-driven decision making.
                </p>
              </div>
            </div>

            {/* Mini Code Editor */}
            <motion.div
              initial={{ opacity: 0, x: 50 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              className="bg-code-bg border border-code-border rounded-lg overflow-hidden"
            >
              <div className="flex items-center bg-dark-card border-b border-code-border px-4 py-2">
                <div className="flex space-x-2">
                  <div className="w-3 h-3 bg-red-500 rounded-full"></div>
                  <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
                  <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                </div>
                <span className="text-gray-400 text-sm font-mono ml-4">ai_systems.py</span>
              </div>
              
              <div className="p-4 h-64 overflow-hidden">
                <motion.pre
                  key={currentSnippet}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: -20 }}
                  className="text-sm font-mono text-gray-300 leading-relaxed"
                >
                  <code>{codeSnippets[currentSnippet]}</code>
                </motion.pre>
              </div>
            </motion.div>
          </motion.div>
        </div>
      </section>

      {/* Skills Visualization */}
      <section className="py-16 px-4 sm:px-6 lg:px-8">
        <div className="max-w-6xl mx-auto">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-4xl font-bold text-white font-mono text-center mb-12"
          >
            Technical{' '}
            <span className="text-neon-green">{'{Expertise}'}</span>
          </motion.h2>
          
          <div className="grid md:grid-cols-2 gap-8">
            {skills.map((skill, index) => (
              <motion.div
                key={skill.name}
                initial={{ opacity: 0, x: -50 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
                className="bg-dark-card border border-dark-border rounded-lg p-6 hover:border-neon-green/50 transition-all duration-300"
              >
                <div className="flex items-center mb-4">
                  <skill.icon className="w-6 h-6 text-neon-green mr-3" />
                  <span className="text-white font-mono font-semibold">{skill.name}</span>
                  <span className="text-neon-green font-mono text-sm ml-auto">{skill.level}%</span>
                </div>
                
                <div className="w-full bg-dark-bg rounded-full h-2">
                  <motion.div
                    className="bg-gradient-to-r from-neon-green to-neon-green/70 h-2 rounded-full"
                    initial={{ width: 0 }}
                    whileInView={{ width: `${skill.level}%` }}
                    viewport={{ once: true }}
                    transition={{ duration: 1, delay: index * 0.1 }}
                  />
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Project Stats */}
      <section className="py-16 px-4 sm:px-6 lg:px-8 bg-dark-card">
        <div className="max-w-6xl mx-auto">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
            {stats.map((stat, index) => (
              <motion.div
                key={stat.label}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
                className="text-center"
              >
                <motion.div
                  className="text-4xl md:text-5xl font-bold text-neon-green font-mono mb-2"
                  initial={{ scale: 0 }}
                  whileInView={{ scale: 1 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.1, type: "spring" }}
                >
                  {stat.value}{stat.suffix}
                </motion.div>
                <div className="text-gray-400 font-mono text-sm">{stat.label}</div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Career Timeline */}
      <section className="py-16 px-4 sm:px-6 lg:px-8">
        <div className="max-w-4xl mx-auto">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-4xl font-bold text-white font-mono text-center mb-12"
          >
            Career{' '}
            <span className="text-neon-green">{'{Timeline}'}</span>
          </motion.h2>
          
          <div className="relative">
            {/* Timeline line */}
            <div className="absolute left-8 top-0 bottom-0 w-0.5 bg-dark-border"></div>
            
            {timeline.map((item, index) => (
              <motion.div
                key={item.year}
                initial={{ opacity: 0, x: -50 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.2 }}
                className="relative flex items-start mb-12"
              >
                {/* Timeline dot */}
                <div className="absolute left-6 w-4 h-4 bg-neon-green rounded-full border-4 border-dark-bg"></div>
                
                {/* Content */}
                <div className="ml-16 bg-dark-card border border-dark-border rounded-lg p-6 hover:border-neon-green/50 transition-all duration-300">
                  <div className="flex items-center mb-3">
                    <span className="text-neon-green font-mono font-bold text-lg">{item.year}</span>
                    <GitBranch className="w-4 h-4 text-gray-400 ml-2" />
                  </div>
                  
                  <h3 className="text-white font-mono font-semibold text-xl mb-2">{item.title}</h3>
                  <p className="text-gray-400 font-mono text-sm mb-4">{item.description}</p>
                  
                  <div className="flex flex-wrap gap-2">
                    {item.tech.map((tech) => (
                      <span
                        key={tech}
                        className="px-2 py-1 bg-neon-green/10 text-neon-green text-xs font-mono rounded border border-neon-green/20"
                      >
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Tech Stack Grid with Enhanced Circuit Board Design */}
      <section className="py-16 px-4 sm:px-6 lg:px-8 bg-dark-card relative overflow-hidden">
        {/* Circuit Board Background Pattern */}
        <div className="absolute inset-0 opacity-5">
          <div className="absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(0,255,153,0.1)_0%,transparent_50%)]"></div>
          <div className="absolute inset-0 bg-[linear-gradient(90deg,rgba(0,255,153,0.05)_1px,transparent_1px),linear-gradient(rgba(0,255,153,0.05)_1px,transparent_1px)] bg-[size:60px_60px]"></div>
          {/* Flowing energy lines */}
          <div className="absolute top-1/4 left-0 w-full h-px bg-gradient-to-r from-transparent via-neon-green/20 to-transparent"></div>
          <div className="absolute top-3/4 left-0 w-full h-px bg-gradient-to-r from-transparent via-neon-green/20 to-transparent"></div>
          <div className="absolute left-1/4 top-0 w-px h-full bg-gradient-to-b from-transparent via-neon-green/20 to-transparent"></div>
          <div className="absolute left-3/4 top-0 w-px h-full bg-gradient-to-b from-transparent via-neon-green/20 to-transparent"></div>
        </div>

        <div className="max-w-6xl mx-auto relative z-10">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-4xl font-bold text-white font-mono text-center mb-12"
          >
            Technology{' '}
            <span className="text-neon-green">{'{Stack}'}</span>
          </motion.h2>
          
          <div className="space-y-12">
            {Object.entries(techStack).map(([category, technologies], categoryIndex) => (
              <motion.div
                key={category}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: categoryIndex * 0.1 }}
              >
                <h3 className="text-xl font-bold text-white font-mono mb-6 text-center">{category}</h3>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
                  {technologies.map((tech, techIndex) => (
                    <motion.div
                      key={tech.name}
                      initial={{ opacity: 0, scale: 0.8 }}
                      whileInView={{ opacity: 1, scale: 1 }}
                      viewport={{ once: true }}
                      transition={{ delay: (categoryIndex * 0.1) + (techIndex * 0.05) }}
                      whileHover={{ 
                        scale: 1.05, 
                        y: -8,
                        boxShadow: "0 20px 40px rgba(0, 255, 153, 0.3)"
                      }}
                      className="group bg-dark-bg border border-dark-border rounded-xl p-6 text-center hover:border-neon-green/50 transition-all duration-300 cursor-pointer shadow-md shadow-neon-green/10 hover:shadow-lg hover:shadow-neon-green/30"
                    >
                      <div className="w-12 h-12 mx-auto mb-3 flex items-center justify-center transition-all duration-300 group-hover:scale-110">
                        {tech.icon}
                      </div>
                      <span className="text-gray-300 group-hover:text-neon-green font-mono font-semibold text-sm transition-colors duration-300">
                        {tech.name}
                      </span>
                    </motion.div>
                  ))}
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Philosophy Section */}
      <section className="py-16 px-4 sm:px-6 lg:px-8">
        <div className="max-w-4xl mx-auto text-center">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-4xl font-bold text-white font-mono mb-8"
          >
            My{' '}
            <span className="text-neon-green">{'{Philosophy}'}</span>
          </motion.h2>
          
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="bg-dark-card border border-dark-border rounded-xl p-8"
          >
            <p className="text-xl text-gray-300 font-mono leading-relaxed mb-6">
              "I believe in the power of AI to transform industries through intelligent automation 
              and data-driven decision making. Every model deployed should solve a real problem, 
              every pipeline should be scalable, and every solution should be built with the future in mind."
            </p>
            
            <div className="flex justify-center space-x-8 text-neon-green">
              <div className="text-center">
                <Brain className="w-8 h-8 mx-auto mb-2" />
                <span className="font-mono text-sm">Innovation</span>
              </div>
              <div className="text-center">
                <Target className="w-8 h-8 mx-auto mb-2" />
                <span className="font-mono text-sm">Precision</span>
              </div>
              <div className="text-center">
                <TrendingUp className="w-8 h-8 mx-auto mb-2" />
                <span className="font-mono text-sm">Impact</span>
              </div>
            </div>
          </motion.div>
        </div>
      </section>

      {/* Call to Action */}
      <section className="py-16 px-4 sm:px-6 lg:px-8 bg-dark-card">
        <div className="max-w-4xl mx-auto text-center">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-4xl font-bold text-white font-mono mb-6"
          >
            Ready to{' '}
            <span className="text-neon-green">{'{Collaborate}'}</span>?
          </motion.h2>
          
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.2 }}
            className="text-xl text-gray-400 font-mono mb-8"
          >
            Let's build the next generation of intelligent systems together
          </motion.p>
          
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.4 }}
            className="flex flex-col sm:flex-row gap-4 justify-center"
          >
            <motion.a
              href="#contact-form"
              className="inline-flex items-center space-x-2 bg-neon-green text-black px-8 py-3 rounded-lg font-mono font-semibold hover:bg-neon-green/90 transition-all duration-300 animate-glow"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Terminal className="w-5 h-5" />
              <span>Start a Project</span>
            </motion.a>
            
            <motion.a
              href="/projects"
              className="inline-flex items-center space-x-2 bg-transparent border-2 border-neon-green text-neon-green px-8 py-3 rounded-lg font-mono font-semibold hover:bg-neon-green hover:text-black transition-all duration-300"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Code className="w-5 h-5" />
              <span>View My Work</span>
            </motion.a>
          </motion.div>
        </div>
      </section>

      <Footer />
    </div>
  );
};

export default AboutPage;